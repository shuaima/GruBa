%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 430.000000 288.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 430 288
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 430 288
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica-Bold
%!FontType1-1.0: Helvetica-Bold 1.0000.1.0000
14 dict begin/FontName /Helvetica-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /S put
dup 34 /i put
dup 35 /n put
dup 36 /a put
dup 37 /space put
dup 38 /M put
dup 39 /c put
dup 40 /r put
dup 41 /o put
dup 42 /b put
dup 43 /l put
dup 44 /g put
dup 45 /D put
dup 46 /t put
dup 47 /e put
dup 48 /m put
dup 49 /s put
dup 50 /K put
dup 51 /y put
dup 52 /d put
dup 53 /u put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2084 1 index div -985 2 index div 2942 3 index div 2374 5 -1 roll div]cvx def
/sfnts [<


1BB04044591B21212045B0C05058B0C0441B2159592DB800302C2020456944B001602020457D691844B001602DB800312CB800302A2DB800322C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800332C4B535845441B2121592DB800342C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800352C2020456944B001602DB800362CB800352A212DB800372C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800382C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800392C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8003A2C2020456944B001602020457D691844B001602DB8003B2CB8003A2A2DB8003C2C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8003D2C4B535845441B2121592DB8003E2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8003F2C2020456944B001602DB800402CB8003F2A212DB800412C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800422C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800432C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800442C2020456944B001602020457D691844B001602DB800452CB800442A2DB800462C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800472C4B535845441B2121592DB800482C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800492C2020456944B001602DB8004A2CB800492A212DB8004B2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8004C2C2046B00425465258238A59







00>] def
/CharStrings 23 dict dup begin
/.notdef 0 def
/space 1 def
/D 2 def
/K 3 def
/M 4 def
/S 5 def
/a 6 def
/b 7 def
/c 8 def
/d 9 def
/e 10 def
/g 11 def
/i 12 def
/l 13 def
/m 14 def
/n 15 def
/o 16 def
/r 17 def
/s 18 def
/t 19 def
/u 20 def
/y 21 def
/u20B8 22 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2084 -985 2942 2374}def
/UniqueID 4330650 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92615E2133941906A02CAE799EFE07355B68024211C14942A28E4AFD6A322333B1C46AB8169FEAF5E975570F862AB63EBFF657A2E6B803408DC2F5F3C763D338214897EDDD0881C4938521FA2295056E617400E0E378702982633942523EB1EAABE9D57457D57A34A22F5BC932468AB92C710C676F82D4DD0AD0ABE5B9924DCF4D791E7B12CCC68DBC587FDE0F6B7A66F0422F2241AB1B71159F9D4C641CC0A4D9A12E659EA3BCF1025C73B2E78D34866950B16E84D2022993058EE1A49A7FF80F4758827BB2ECF50CD3F71C78476837ECA100003DCD33D02449F7181E06F9993702F01B77FAA010B2496ADAEF205DA541FF1E629C801C98E8C2D7C07944447795B98C91B2DBEB6C1E40850599FA5EBC99C9655E8C5D7DD04C1CBBBFD86A19BA341CD78B9445E040A3A864B64B45BB61B7EC2862BA10892A6696AA191258EF5575A856B8478BF9DBB2DA64D23534AFCE847ACE2B7B6B3C8D2E6CAFBD2BA01EF948F76AE04A648D4C17F4E7F20E3ADFBB920A7C6F384B53CF32BCA520AB474796774D5D51B80B34899D37BD9F0DBAE3D69024DAC93C5167897B282643AD3947374A2EA40A4326A1DBB4AF350C797B05209E16E5E2FC02FCBC75C98D653A316BCF6E1812FA6DCBE241472F5D3A3F486C8A1E6B6300D7A64F1E15F2214CB053695155CCC1309622B04AE5C8762BB4A4748C51C9201AB8DCE68E3CF3104A9CB03CC531BEC71F3D91586AABC8A29BA9B0F8349C4DF5EA590914A2B2A3DEA88A51E9AA24
A9077C482D1CA87A828C0987550D2EA5A450B0BFCDAFFAF756BFCB0B2B30BE2A52A66BABD7E542193293BB265ED4209761AE356CF417FA49D13F72B227521FF352E6972356C3BFB89ACF7746995663E6D71C032127D751AAAAFD6ED90B5546C471DD26A11A00F9BB76F39D8FA595F1A9F44DB4D3F87F83C749ECCCD42B5C4C95C650451E4EA8315173E2B97BAF4D311F1B751278F1D674B9BE8183E5C87AF5E0939DC1B337F31F5BD6DE22579C6AC7B02D8125EDD503E1FC39CD0B185537D0A070C6BC2E2B74FCC2E1C58C33450294E11BC0560F8AB0961D4C318EE68811A5A676C14875A725109625EF7B0866E8F98ADFCC1AF85F96BD9270C8073871551ED0FF2D6C1EA7ABC15037E93B525402907E498E573110EC826B000FB135923E3ED549FB0214A39DBE629D9CA72C0D6A50D219EFCB15E83E5F1DF5514B8A1DD640ED6E16392792569AFEA79A1089799587448EACE5F2EAEC513C51293A6B20A6C371525E4B34058707642E3E60701EC5DE6158AFEEE1ED6DD54519B52696C300AC560AD62C8616BC22CA2E057BA6BED90AC3C06802390BD06C58D96DA450169601C7A3280C38CDC045B18C3766935630516C30AAA25D0D1A1B2E59B5524F00ECF0341CD518BC9485EF8C53B8AFD3F63E990F1D1559176B615DA51963FFD51478C3F0B088334B53818D03779EA3F2C03A6C0E1C558434FB1873AD878586F748955E5124F20230C3202448918FB5F6FBC4E2538127A7EC36A90DB852BCD6B4777F8E093F3E34AA0EB41EDB2F8F18DBC1FEAE0C3D61547673FA5D1E16207635C698C6AFE0F2F622FCA5EE82C48B2702813F42430C0CF490306A35F88D5E31D16CECB01F40A94BDE784FBCAC91BF91F9992C36643A734A7A366336CD01E717BA598153A96AFC40224232A750A0CD536B04B5AFAD44F503EE244673648E1A24C85B7FB94ECE21D44F1C8EA302A8F7251ACD38AF145667E0DF6D6FED3FF0DFF8EB73A219D49B2508DB9C5338AE647E8B98AE7797B37CCD9A35AB40D8378BB1D39E88DF23B5CB1F6C9CFBD1754B92194B8CE822B31098EA4DD551E8C5472F7A94D87AC36967C8A7C7F9C919D8F947CE9186AEDF8C0EABA57FC0BD530FED10D6AC7E23F96C4330EAB50CF5EE29E9DA04349EF1FB0E57FDDE1004A5A81543BB9CA5C7D705E5AB4D516A0FDBD00DBB0E5BF2C414ED40E9B0BEC811F9E857476B9471FDE85DC0D4D507ECB9AA42E0CF7D9DDBC9A414C00491E368F6F890C8C203510A09DB65D791AEAC8384D8C3BE2EC72F1F8428D1D0132845B32F348C3802748801F75D34B8E4CE1B3ADFFD51E0107CEA20A710E454F09F3163257AB70D95A64BC84FFAA8BF2C7494D4BBD3D46DE68A4FBFA6428353890CAA74A854AA1E8DAC525F42E929EEA38B46F1EB9796FF6FC3890897A926C1B26004FFC3B8C1F479D97E76B88E57EB79
2680C11E28B774AA9DF308448C5543A9843753EBE74649A1F66A79C335D33C550DE8A68BB4BC9A592EF414645C8606E9693CE77599DC671B13DC257935B41322354217614300A0C1888A3006C1DD9FE9971D511A96E5C26D1996BEB4F26498C78CF609CB98DEC6B706CC14AECDBEC0256CC14761924A3BE36C21B2E04144D85F49C61693FACE10857E53A7744619B1CB19975BA4E5DD48AA36E826B56E9652662B7E79261B0DD2E79A0ADD8CEE479AAD4AA19F4BBB242611483DBE1D7999F57206337747BFE0D513C9C12F8CF57A570FBE9F543AC54F1CCDC4012F92E3BFE1239633F1DFC6C4886C6E2958D18A3953F8469942CDE73244377868809377AD85182F56ECA23D283D490575048700E99D47147C2299452DDA479AD249E28FF89942A9093825DC1F80CBF26A5E9B7ADDD4EE829B72CB47D7660608CEFF8683CB76462297C87FF7824CECF1AFAE091FF1F746A2C0DFFCF293BA9545EAF0840429502F4FE2956E0DED8EC6C3CBA489244E340B28A99F84C8989CBC2BBAF7DD9C593B549F301CB7059572F14B8E292CA9A580464196D3FF626C05604661D4E5D84EA3B683EEFAB861D822CA2E2EC8AFD072E7011C4A61881490A317FA50F04425964AF525AEDB010DA4FE128D6504E09D77D515C01A5839E85881E630A64B1CE18B5DFB00EA1220FC97148FB179A77471611F255801F97942FE93056C1C6E4470EB6D7611E9B2E1776446EF2E1405909A9C1D522F0C7039C6DA3D919E9888026389FD640C3D8F27A9943FF593C487A8E50F49D317F5241299901ABAF408FA420FE609E1AD6B220FAF65DF066F23EF18FEEE8F6F2766B4BF02174D210531A148EF16284F2A26485F744E93FC260575CD556845CFFF7B92D55B0FFD7A114DA9D9931CA0E864A3CE26A1CB656A1BE448669F6C5D60175246BA6D6BF0027AD7F05088611642DC347911FA95061619007DE95AD7996F4645BF561B2B7D41AF7C3506C945FB79CC67D19547F3D10C9ED9EA7B6F77823A2E194768801778771AAAE74B20D34C61218B4D1BBC962A283CC95C26F9802750412C065422193AF569BD088F9D7132A8DFE7BF900145BB185FEB196A67B94276E79D3665F258F0AEF0669855C4405FC8F6B31197A98C5964C53BDE3D6521EF7054982F4248B0E4C2423266E83BE001DB56585C594EFB3768F6850359C8AB7949BEED9904588712C5F84FA4E2719D206E733F33C92268D33EB3019182804CAAF964852B72126492293D4693283E80F23A3511B3904132205B9D51A7C83DAFA466071BE7F51E157D30C628EF7E8C1367B0A0A80B87E0A700DCACFBDF7465AF747333E6869BB36D3F1F7C6306C799D5E674B4418CB5101132269DA2E0514266804477E721FE8FFAD342C413DDF67B81DA89A1F5AFAE6B23AB0C2CB8BB66EF103EE63306EE236D7590A4AC50A5A95506AAF9
09E809D22B9794AC7CEDE92336BBFC59543BF39447AE6D134B44A68FECBEBEA22DB365E2529783E9CA0FC6C4A4B5464D90D16F51EFA45ED6274E9B2CD2C19F5557A6DE7E3FD5167C394038DD0EA149B64D2FF7C7ADF9F30C17E9542F90F9CA33B466893EDB7E2531F14D3E0BA419A2356771CF08081A37E7654D6A3DFCE82FD5BBCCC02F0440CA09E751EA197FCF3432B02BE4F0B8585D148CE20A9E6BCE250991A8A8AF81A0D98A3DE01307B87AD65F822CD4F0302EAE51A968966C76682783FD730007137FC43A64DF72F874397A541219AFBFC382CF655421AC07DEE9352926D4882C0BBBB12495B4572F0E8300666ADE01DFB87B0AC618B0C8B0CE9C23AC1EDE29542ED5797721124679E8F9C7595FC888843CEDB0140625E00A05AAD80289370B9C5088E5077699F4E8C279110994E21FA39FA9EB28E96BC6DCD197EB53BB269B16505A3667E434D506F4ECDDF738E611E9AABFAB2532B5791DEBB474963202204BFD7A2CF80C72891396C9CEB94A0F1715B18A92591FACB34917C8C64E76B6D4B341B7D677B45C21B4680B50F9D0CFC36FEB657BCFFB24A3F21681E5D20026593D39C0FA0AE125764AE2C35C49F47B04DA9D6EB5B4B56C62C1A8064C45FD7A059D19F792823292BE7C71DADBD4446550FCB49A534F4F1F3243E5D608B3F6E7B9764A281308FD96CE319F490B3FEFACF8381B3B5B55816E2B43F727A1F2EBFF56801B582F6EB29CEB6A3C957A90B40EF97D8481A5194C250896217D11ECCBC2A5F0C73183AABE7000E01AC41D9DB0DDAC2807EB3A8B6FE4572BA7230709454EF4F75B2C25A5BEC00F75BFA8954AD2467F4ECC9024CE1212BA8B5374C4CF1C114865CD6A49449B258F26CDF0F7075894CC7E2FF991153C134AECA8CE6AA7CBCFCF17E5B34DAD2EDC697C77FCE63C645312D6501450A3AF10C408D6E80936016EDCA83AC9CED0360E22014321164B111AE4E6EDB536F08FD831D9FF3BE2617CA7026ED68C907EFA454E181CCC6C68A499F1C27E0D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica-Bold cguidfix
/F1.1/Helvetica-Bold renmfont
%RBIBeginFontSubset: Helvetica-BoldOblique
%!FontType1-1.0: Helvetica-BoldOblique 1.0000.1.0000
14 dict begin/FontName /Helvetica-BoldOblique def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /F put
dup 34 /e put
dup 35 /a put
dup 36 /t put
dup 37 /u put
dup 38 /r put
dup 39 /E put
dup 40 /x put
dup 41 /c put
dup 42 /i put
dup 43 /o put
dup 44 /n put
dup 45 /U put
dup 46 /s put
dup 47 /C put
dup 48 /l put
dup 49 /g put
dup 50 /B put
dup 51 /h put
dup 52 /v put
dup 53 /space put
dup 54 /M put
dup 55 /d put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2050 1 index div -985 2 index div 3255 3 index div 2407 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000001E6670676D00000000000000BC00000173676C796600000000000002300000118C6865616400000000000013BC000000366868656100000000000013F400000024686D74780000000000001418000000646C6F6361000000000000147C000000346D61787000000000000014B0000000207072657000000000000014D000000096002A00FE0098012A013300E7011A00000029FE4E000C0442002305C2002D0000B800002C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800092C4B535845441B2121592D000002009A0000053D05C2000300070065B800082FB800042FB8000810B80000D0B800002FB8000410B900030005F4B8000010B900070005F4B8000310B80009DC00B800004558B800012F1BB90001000D3E59B800004558B800002F1BB9000000073E59B900040002F4B8000110B900050002F4303133112111271121119A04A3B8FCCD05C2FA3EB80452FBAE000300A10000063405C2000900140029004D00B800004558B800272F1BB90027000D3E59B800004558B800252F1BB9002500073E59BB00010001000A00042BB8002710B900000001F4B8002510B9000B0001F4BA001B000A00011112393031010321323637362726230103213237363736272627011607060706071E0107060706070E01232101210402C945016A6189141548416BFE4353016A613B6D1D185630600245301B1D562F52684D1B1C58394952C971FD64013902CC010E04C2FEBB495D672117FDC7FE771A3088732B1801029C5E8387522E2629B27F8368452F362805C204000100AAFFD7066205DE001E006500B800004558B800022F1BB90002000D3E59B800004558B800192F1BB9001900073E59B8000210B9000B0001F441070008000B0018000B0028000B00035DB8001910B900110001F441070007001100170011



0003F4B8002810B900040001F4410700070004001700040027000400035DB8001210B900150003F4B8001210B9001A0001F441070008001A0018001A0028001A00035D3031010617163332363736272627262726373624333216072136272623220607061716171617160706042320263701AC0718288F546E0B0A2323F4AF3D3E1C20011BD7CCDE17FEE3051223715D5B080B2625F3A144431A23FEE4FCFEFFC723015C4C203932323019193D2E45448097D9A3C837203A3A27311617382851527BA2CDD9A80000000100C3FFEA035D05680016006300B800004558B800102F1BB9001000073E59BB00010001000000042BB8000010B900030003F4B8000110B80005D0B8000010B80007D0B8001610B80008D0B8001010B9000C0001F441070007000C0017000C0027000C00035DB8000FD0B8000F2F3031133733132103330723030616333236370F010627263713CF2B9841011A41B12BB17B0E1B570D1D0F2E88CB3A25158F036DCB0130FED0CBFDC043210101D505074D3166029F0000000100B1FFE8053C04420019006C00B800004558B800002F1BB90000000B3E59B800004558B8000A2F1BB9000A000B3E59B800004558B800142F1BB9001400073E59B800004558B8000C2F1BB9000C00073E59B8001410B900050001F4410700070005001700050027000500035DBA000E0014000511123930310103061716333237363713210321370E01070E0123222726371302888B140C1572924F2A167E0121E7FEEB20052A1A508754F22F1A288B0442FD6F5D2F537640690251FBBE9A0532133C2CAE60BB02910000000101010000053E04420006004000B800004558B800002F1BB90000000B3E59B800004558B800042F1BB90004000B3E59B800004558B800022F1BB9000200073E59BA000600020000111239303101210121032113040C0132FD90FED3A00140380442FBBE0442FCDC0000000001001A000005290440000B005B00B800004558B800022F1BB90002000B3E59B800004558B800052F1BB90005000B3E59B800004558B800002F1BB9000000073E59B800004558B800082F1BB9000800073E59BA000400000002111239BA000A000000021112393031330103211B012101132103011A01E9F2015D73F50153FE29FEFE9D77FEFE02280218FEC4013CFDEDFDD30147FEB900000200D600000572059A0007000B003000B800004558B800052F1BB9000500073E59BB00090001000800042BBB00010001000000042BB8000010B80003D03031133721072103211301372107D635041135FE83A5FEE9A5FED935041135030AFCFCFCF6030A0194FCFC0000000001000000010000A3D573DC5F0F3CF50019080000000000A2272E8000000000D383C76EF7FEFC270CB70967000300090001000000000000000100000629FE2900000C01

00>] def
/CharStrings 25 dict dup begin
/.notdef 0 def
/space 1 def
/B 2 def
/C 3 def
/E 4 def
/F 5 def
/M 6 def
/U 7 def
/a 8 def
/c 9 def
/d 10 def
/e 11 def
/g 12 def
/h 13 def
/i 14 def
/l 15 def
/n 16 def
/o 17 def
/r 18 def
/s 19 def
/t 20 def
/u 21 def
/v 22 def
/x 23 def
/u20B8 24 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2050 -985 3255 2407}def
/UniqueID 4357340 def
currentdict currentfile eexec

9DD244BDB563F61EAC00AAD023C07C32BCE30CF8992D5ED253EBEC081B0654160D60D56BE278ED678D6777D1285DBE297B75E755BB7CBE027CBE11056721F50DC4060288F503692CD2149BA9EE1269EFC6347FA6E37BD948FB9EDA0AC11A44648D738B8EAF97628D32B700399401941D88462ECC5462BEBE1F1CAA33C582B52721C3F715D51B03AC92D32262876A4C1A8DA984C9D7405C36A8F3DFE6430DC46A3019787775F2C83432079E5FA0C66E98049E301F511865EE566B6CADA5B2589B1F9A203711C81FDB1F08DBE5BCE7E454A8492D20011673EEA782B38E60056982963565E6EF586C80632B625AD692F5095066BD416C16275207E1D83452652C033DDD634EA2C479655A0D586C0733698FD0451A37AF189503DF5815E1BD58B24648BEAA8E5B1B72EB17090502FCD3939CB6A09AFA9A8E1E4B25938E017F0D42353386DACD9D98F7009B5FBF47620BC37190E833CD8FD20E930D2DE223E25AE349336A8C17AFF3557DFC8F8755697C89F66ED95532F4250515DC60CA0E6B0DD2BAADCEE17720A33ABFC4A42F6CC76A0918E04AD452E62C33C8AE7E1B1C1CBD3D8AC76C8691006EF71540F2938E18D0AB2DD370A2D284096AA663A6D887AECC5998F598DAE6990FC3C75F7DEAA282E0A557D6C0AF236390C11D967FDC0E4769AD309C6DD4C3F3C7638126DBD9EEB38D67D15D7C4D34FC35C5FCBCB2D8D202962ECA6F756AD78A72D9C4851B1AE03993A3D56E62CDC1282DF6E9D7E841184017697D8C211467D1CD61FC12D3AAEB67EBC60D3F385CF60302E4426DDA72003B2DC86A48537ADE17365E9F401AFD4EC7005F6607EE88055F08E8CA7C0A85F5B4B068E2427BD85C0D84D48D3A205F1B4B5D875B40EC27DF7D55619BB40DB859CC82F99B3202CFE6C77F46FF12679A1FF82FA7DF796A3F89B3913E681282565F6B66FD1FC4347B91CE83AABFCC68A553EB05208D52EC785F26450C92D81230A46977D17603994AB4C3261B9112110092BA1B40839B5B400AD32C4BD344B0D48658951C7AEA12F80BD2C4C945F5720E43559AD0E1ED1276069745EDF75F1179FF3C3F82B1B653DE6005694DC2C77373A497C28D6F465D290E23305AA1A0EF048DE7D824B6A5882F18E97722B7046702250A1C06FD6D21FE179709E5EF05EC41C00A707EDE0FC416FED4F52A1C1A6863BE9109E438D5F4A25862A2931D107028CAEE073C0E6C3B4702B9DBD44999FE0124D5ADD2D82D92038BED790C27DFD8A72F16CF32C54DF2EED9EA16B0FFFEF7BC1960BF062D689CFCEFA5A589E29F3F38684D995296545EEC50400CCFAFD6CEFADDFC2CE50F95BAF267E9162F32478B9A78FF896B8EB277E1978482D6ED2AC8A84839439688F1E3BBAA435CDE4D97953BB728D6BB3282B4FBCD6822BFD8E310B0BFE9805EF2F992E2B13A78EA399FF9114E1DFCBFCA


0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica-BoldOblique cguidfix
/F2.1/Helvetica-BoldOblique renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 430 288 rc
-79.5 484.5 m
479.77563 484.5 l
479.77563 -298.38977 l
-79.5 -298.38977 l
h
-79.5 484.5 m
f
2 w
1 J
1 j
[
4
4
] 0 d
0 0 0 sc
1 0 0 -1 -79 484 cm
82 257 m
507 257 l
507 423.77756 l
82 423.77756 l
h
82 257 m
S
1 1 1 sc
CM
3 52.444885 m
428 52.444885 l
428 2.0698853 l
3 2.0698853 l
h
3 52.444885 m
f
[] 0 d
0 0 0 sc
1 0 0 -1 -79 484 cm
82 431.55511 m
507 431.55511 l
507 481.93011 l
82 481.93011 l
h
82 431.55511 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 215.5 27.257385 cm
/F1.1[ 18 0 0 -18 0 0]sf
-86.510742 7 m
(!"#$%&"'\(\)*+\),%-$.$)[ 12.005859 5.000977 10.995117 10.010742 5.000977 14.994141 5.000977 10.010742 7.004883 10.995117 10.995117 5.000977 10.995117 10.995117 5.000977 12.999023 10.010742 5.994141 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.90196103 0.90196103 0.90196103 sc
CM
21 184 m
113 184 l
116.31371 184 119 181.31371 119 178 c
119 79.999756 l
119 76.68605 116.31371 73.999756 113 73.999756 c
21 73.999756 l
17.686291 73.999756 15 76.68605 15 79.999756 c
15 178 l
15 181.31371 17.686291 184 21 184 c
h
21 184 m
f
1.5 w
0 0 0 sc
1 0 0 -1 -79 484 cm
100 300 m
192 300 l
195.31371 300 198 302.68628 198 306 c
198 404.00024 l
198 407.31396 195.31371 410.00024 192 410.00024 c
100 410.00024 l
96.686295 410.00024 94 407.31396 94 404.00024 c
94 306 l
94 302.68628 96.686295 300 100 300 c
h
100 300 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 67 128.99988 cm
/F2.1[ 18 0 0 -18 0 0]sf
-32.510742 -4 m
(!"#$%&")[ 10.995117 10.010742 10.010742 5.994141 10.995117 7.004883 0.000000 ] xS
-44.01123 18 m
('\($&#\)$*+,)[ 12.005859 10.010742 5.994141 7.004883 10.010742 10.010742 5.994141 5.000977 10.995117 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.90196103 0.90196103 0.90196103 sc
CM
169.35001 184 m
261.35001 184 l
264.66373 184 267.35001 181.31371 267.35001 178 c
267.35001 79.999756 l
267.35001 76.68605 264.66373 73.999756 261.35001 73.999756 c
169.35001 73.999756 l
166.0363 73.999756 163.35001 76.68605 163.35001 79.999756 c
163.35001 178 l
163.35001 181.31371 166.0363 184 169.35001 184 c
h
169.35001 184 m
f
0 0 0 sc
1 0 0 -1 -79 484 cm
248.35001 300 m
340.35001 300 l
343.66373 300 346.35001 302.68628 346.35001 306 c
346.35001 404.00024 l
346.35001 407.31396 343.66373 410.00024 340.35001 410.00024 c
248.35001 410.00024 l
245.0363 410.00024 242.35001 407.31396 242.35001 404.00024 c
242.35001 306 l
242.35001 302.68628 245.0363 300 248.35001 300 c
h
248.35001 300 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 215.35001 128.99988 cm
-20.012695 -4 m
(-."&)[ 12.999023 10.010742 10.010742 0.000000 ] xS
-44.503418 18 m
(/0%.$"&*,1)[ 12.999023 5.000977 10.995117 10.010742 5.994141 10.010742 7.004883 5.000977 10.995117 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.90196103 0.90196103 0.90196103 sc
CM
318.70001 184 m
410.70001 184 l
414.01373 184 416.70001 181.31371 416.70001 178 c
416.70001 79.999756 l
416.70001 76.68605 414.01373 73.999756 410.70001 73.999756 c
318.70001 73.999756 l
315.38629 73.999756 312.70001 76.68605 312.70001 79.999756 c
312.70001 178 l
312.70001 181.31371 315.38629 184 318.70001 184 c
h
318.70001 184 m
f
0 0 0 sc
1 0 0 -1 -79 484 cm
397.70001 300 m
489.70001 300 l
493.01373 300 495.70001 302.68628 495.70001 306 c
495.70001 404.00024 l
495.70001 407.31396 493.01373 410.00024 489.70001 410.00024 c
397.70001 410.00024 l
394.38629 410.00024 391.70001 407.31396 391.70001 404.00024 c
391.70001 306 l
391.70001 302.68628 394.38629 300 397.70001 300 c
h
397.70001 300 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 364.70001 128.99988 cm
-38.513672 -4 m
(2"3#4*+&5)[ 12.999023 10.010742 10.995117 10.010742 10.010742 5.000977 10.995117 7.004883 0.000000 ] xS
-39.493652 18 m
(6+7"0*,1)[ 14.994141 10.995117 10.995117 10.010742 5.000977 5.000977 10.995117 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.50196099 0.50196099 0.50196099 sc
CM
119.65001 118.69988 m
119.65001 140.29988 l
142.85001 140.29988 l
142.85001 151.09988 l
162.85001 129.49988 l
142.85001 107.89989 l
142.85001 118.69988 l
h
119.65001 118.69988 m
f
1 1 1 sc
2.8500061 285.15256 m
427.85001 285.15256 l
427.85001 234.77756 l
2.8500061 234.77756 l
h
2.8500061 285.15256 m
f
2 w
0 0 0 sc
1 0 0 -1 -79 484 cm
81.850006 198.84744 m
506.85001 198.84744 l
506.85001 249.22244 l
81.850006 249.22244 l
h
81.850006 198.84744 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 215.35001 259.96506 cm
/F1.1[ 18 0 0 -18 0 0]sf
-59.009766 7 m
(-/0\)#1.\($.\)\()[ 12.999023 10.010742 16.004883 10.995117 10.995117 10.010742 5.994141 7.004883 10.010742 5.994141 10.995117 0.000000 ] xS
1 0 0 -1 215.35001 202.8125 cm
-55.511719 7 m
(2/3%&\)45+/1)[ 12.999023 10.010742 10.010742 5.000977 14.994141 10.995117 10.995117 10.995117 5.000977 10.010742 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.50196099 0.50196099 0.50196099 sc
CM
269 118.69988 m
269 140.29988 l
292.20001 140.29988 l
292.20001 151.09988 l
312.20001 129.49988 l
292.20001 107.89989 l
292.20001 118.69988 l
h
269 118.69988 m
f
ep
end
%%Trailer
%%EOF
